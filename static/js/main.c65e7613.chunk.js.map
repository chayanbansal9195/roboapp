{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/ErrorBoundaries.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","className","src","alt","CardList","robots","cardsArray","map","user","i","username","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","border","children","ErrorBoundaries","state","hasError","error","info","this","setState","Component","App","useState","setRobots","searchField","setSearchField","useEffect","fetch","then","res","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAaeA,EAXF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACxB,OACE,sBAAKC,UAAU,mDAAf,UACE,qBAAKC,IAAG,+BAA0BH,EAA1B,YAAwCI,IAAI,WACpD,gCACE,6BAAKL,IACL,4BAAIE,WCSGI,EAfE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACnC,OACE,cAAC,EAAD,CAEEV,GAAIM,EAAOI,GAAGV,GACdD,KAAMO,EAAOI,GAAGX,KAChBE,MAAOK,EAAOI,GAAGT,MACjBU,SAAUL,EAAOI,GAAGC,UAJfD,MAQX,OAAO,8BAAMH,KCCAK,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,qBAAKX,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCHHI,EAJA,SAACC,GACd,OAAO,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,QAASC,OAAO,mBAAxD,SAA6EJ,EAAMK,Y,4BCe7EC,E,kDAfb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,UAAU,GAHA,E,qDAMd,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAE5B,WACE,OAAIG,KAAKJ,MAAMC,SAAiB,6CACpBG,KAAKX,MAAMK,a,GAZGQ,aCyCfC,G,MAjCH,WACV,MAA4BC,mBAAS,IAArC,mBAAO3B,EAAP,KAAe4B,EAAf,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAGAC,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAWR,EAAUQ,QAC5B,IAEH,IAGMC,EAAiBrC,EAAOsC,QAAO,SAACC,GACpC,OAAOA,EAAM9C,KAAK+C,cAAcC,SAASZ,EAAYW,kBAEvD,OAAKxC,EAAO0C,OAGR,sBAAK9C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAXM,SAACoC,GACtBb,EAAea,EAAMC,OAAOC,UAWxB,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU7C,OAAQqC,WARD,2CCfdS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.c65e7613.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, id, email }) => {\r\n  return (\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img src={`https://robohash.org/${id}?200x200`} alt='robots' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nconst CardList = ({ robots }) => {\r\n  const cardsArray = robots.map((user, i) => {\r\n    return (\r\n      <Card\r\n        key={i}\r\n        id={robots[i].id}\r\n        name={robots[i].name}\r\n        email={robots[i].email}\r\n        username={robots[i].username}\r\n      />\r\n    );\r\n  });\r\n  return <div>{cardsArray}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='search robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return <div style={{overflowY:'scroll', height:'800px', border:'5px solid black'}}>{props.children}</div>;\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundaries extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  render() {\r\n    if (this.state.hasError) return <h1>Oops! error</h1>;\r\n    else return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundaries;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n\r\nimport ErrorBoundaries from './ErrorBoundaries';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [robots, setRobots] = useState([]);\r\n  const [searchField, setSearchField] = useState('');\r\n\r\n  //   life cycle\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((res) => res.json())\r\n      .then((users) => setRobots(users))\r\n  }, []);\r\n  //   functions\r\n  const onSearchChange = (event) => {\r\n    setSearchField(event.target.value);\r\n  };\r\n  const filteredRobots = robots.filter((robot) => {\r\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n  });\r\n  if (!robots.length) return <h1>Loading</h1>;\r\n  else {\r\n    return (\r\n      <div className='tc'>\r\n        <h1 className='f1'>RoboFriends</h1>\r\n        <SearchBox searchChange={onSearchChange} />\r\n        <Scroll>\r\n          <ErrorBoundaries>\r\n            <CardList robots={filteredRobots} />\r\n          </ErrorBoundaries>\r\n        </Scroll>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}